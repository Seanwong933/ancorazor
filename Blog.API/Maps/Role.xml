<?xml version="1.0" encoding="utf-8"?>

<!--
//*******************************
// Create By Siegrain
// Date 2019-03-09 15:24
// Code Generate By SmartCode
// Code Generate Github : https://github.com/Ahoo-Wang/SmartCode
//*******************************-->

<SmartSqlMap Scope="Role" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">

  <Statements>
    <Statement Id="QueryParams">
      <Where>
        <IsNotEmpty Prepend="And" Property="Id">
          T.Id = @Id
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Name">
          T.Name = @Name
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Sort">
          T.Sort = @Sort
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="IsEnabled">
          T.IsEnabled = @IsEnabled
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Creator">
          T.Creator = @Creator
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="CreatedAt">
          T.CreatedAt = @CreatedAt
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Updator">
          T.Updator = @Updator
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="UpdatedAt">
          T.UpdatedAt = @UpdatedAt
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="IsDeleted">
          T.IsDeleted = @IsDeleted
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Remark">
          T.Remark = @Remark
        </IsNotEmpty>
      </Where>
    </Statement>

    <Statement Id="GetRolesByUser">
      SELECT T.Id, T.Name From Role T
      Join UserRole UR on T.Id = UR.RoleId
      Where
        UR.UserId = @userId And UR.IsDeleted = 0
        And T.IsDeleted = 0 And T.IsEnabled = 1
    </Statement>

    <!--新增-->
    <Statement Id="Insert">
      INSERT INTO Role
      (
      Name,
      Sort,
      IsEnabled,
      Creator,
      CreatedAt,
      Updator,
      UpdatedAt,
      IsDeleted,
      Remark
      )
      VALUES
      (
      @Name,
      @Sort,
      @IsEnabled,
      @Creator,
      @CreatedAt,
      @Updator,
      @UpdatedAt,
      @IsDeleted,
      @Remark
      )
      ;Select Scope_Identity();
    </Statement>

    <!--删除-->
    <Statement Id="Delete">
      Delete From Role
      Where Id=@Id
    </Statement>

    <!--更新-->
    <Statement Id="Update">
      UPDATE Role
      <Set>
        <IsProperty Prepend="," Property="Name">
          Name = @Name
        </IsProperty>
        <IsProperty Prepend="," Property="Sort">
          Sort = @Sort
        </IsProperty>
        <IsProperty Prepend="," Property="IsEnabled">
          IsEnabled = @IsEnabled
        </IsProperty>
        <IsProperty Prepend="," Property="Creator">
          Creator = @Creator
        </IsProperty>
        <IsProperty Prepend="," Property="CreatedAt">
          CreatedAt = @CreatedAt
        </IsProperty>
        <IsProperty Prepend="," Property="Updator">
          Updator = @Updator
        </IsProperty>
        <IsProperty Prepend="," Property="UpdatedAt">
          UpdatedAt = @UpdatedAt
        </IsProperty>
        <IsProperty Prepend="," Property="IsDeleted">
          IsDeleted = @IsDeleted
        </IsProperty>
        <IsProperty Prepend="," Property="Remark">
          Remark = @Remark
        </IsProperty>
      </Set>
      Where Id=@Id
    </Statement>

    <!--获取数据列-->
    <Statement Id="Query">
      SELECT
      <IsNotEmpty Prepend="Top" Property="Taken">
        (@Taken)
      </IsNotEmpty>
      T.* From Role T
      <Include RefId="QueryParams" />
      <Switch Prepend="Order By" Property="OrderBy">
        <Default>
          T.Id Desc
        </Default>
      </Switch>
    </Statement>

    <!--获取分页数据-->
    <Statement Id="QueryByPage">

      Select TT.* From
      (Select ROW_NUMBER() Over(Order By T.Id Desc) Row_Index,T.* From Role T With(NoLock)
      <Include RefId="QueryParams" />) TT
      Where TT.Row_Index Between ((@PageIndex-1)*@PageSize+1) And (@PageIndex*@PageSize);
    </Statement>

    <!--获取记录数-->
    <Statement Id="GetRecord">
      Select Count(1) From Role T
      <Include RefId="QueryParams" />
    </Statement>

    <!--获取表映射实体-->
    <Statement Id="GetEntity">
      Select Top 1 T.* From Role T With(NoLock)
      <Where>
        <IsNotEmpty Prepend="And" Property="Id">
          T.Id=@Id
        </IsNotEmpty>
      </Where>
    </Statement>

    <!--是否存在该记录-->
    <Statement Id="IsExist">
      Select Count(1) From Role T
      <Include RefId="QueryParams" />
    </Statement>
  </Statements>
</SmartSqlMap>