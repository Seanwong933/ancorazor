<?xml version="1.0" encoding="utf-8"?>

<!--
//*******************************
// Create By Siegrain
// Date 2019-03-09 15:24
// Code Generate By SmartCode
// Code Generate Github : https://github.com/Ahoo-Wang/SmartCode
//*******************************-->

<SmartSqlMap Scope="Category" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">

  <Statements>
    <Statement Id="QueryParams">
      <Where>
        <IsNotEmpty Prepend="And" Property="Id">
          T.Id = @Id
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Name">
          T.Name = @Name
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="CreatedAt">
          T.CreatedAt = @CreatedAt
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="UpdatedAt">
          T.UpdatedAt = @UpdatedAt
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="Remark">
          T.Remark = @Remark
        </IsNotEmpty>
        <IsNotEmpty Prepend="And" Property="IsDeleted">
          T.IsDeleted = @IsDeleted
        </IsNotEmpty>
      </Where>
    </Statement>

    <!--新增-->
    <Statement Id="Insert">
      INSERT INTO Category
      (
      Name,
      CreatedAt,
      UpdatedAt,
      Remark,
      IsDeleted
      )
      VALUES
      (
      @Name,
      @CreatedAt,
      @UpdatedAt,
      @Remark,
      @IsDeleted
      )
      ;Select Scope_Identity();
    </Statement>

    <!--更新文章分类-->
    <Statement Id="SetArticleCategories">
      declare @categoryNames table ([name] nvarchar(30));
      <For Open="insert into @categoryNames values" Close="" Key="T" Separator="," Property="categories">
        (@T)
      </For>;

      -- insert only not exists in Category table
      insert INTO Category
        select name, getdate(), getdate(), null, 0 from
          (select name from @categoryNames where name not in (select name from Category)) T;

      -- rebuild middle-table related data
      delete from ArticleCategories where Article = @articleId;
      insert into ArticleCategories select @articleId, Id, getdate(), getdate() from
        (select id from Category where Name in (select name from @categoryNames)) T;
    </Statement>

    <!--删除-->
    <Statement Id="Delete">
      Delete From Category
      Where Id=@Id
    </Statement>

    <!--更新-->
    <Statement Id="Update">
      UPDATE Category
      <Set>
        <IsProperty Prepend="," Property="Name">
          Name = @Name
        </IsProperty>
        <IsProperty Prepend="," Property="CreatedAt">
          CreatedAt = @CreatedAt
        </IsProperty>
        <IsProperty Prepend="," Property="UpdatedAt">
          UpdatedAt = @UpdatedAt
        </IsProperty>
        <IsProperty Prepend="," Property="Remark">
          Remark = @Remark
        </IsProperty>
        <IsProperty Prepend="," Property="IsDeleted">
          IsDeleted = @IsDeleted
        </IsProperty>
      </Set>
      Where Id=@Id
    </Statement>

    <!--获取数据列-->
    <Statement Id="Query">
      SELECT
      <IsNotEmpty Prepend="Top" Property="Taken">
        (@Taken)
      </IsNotEmpty>
      T.* From Category T
      <Include RefId="QueryParams" />
      <Switch Prepend="Order By" Property="OrderBy">
        <Default>
          T.Id Desc
        </Default>
      </Switch>
    </Statement>

    <!--获取数据列-->
    <Statement Id="QueryByNames">
      SELECT T.* From Category T
      Where
      <For Open="T.Name in (" Close=")" Key="@name" Separator="," Property="names">
        @name
      </For>
    </Statement>

    <!--获取分页数据-->
    <Statement Id="QueryByPage">
      Select TT.* From
      (Select ROW_NUMBER() Over(Order By T.Id Desc) Row_Index,T.* From Category T With(NoLock)
      <Include RefId="QueryParams" />) TT
      Where TT.Row_Index Between ((@PageIndex-1)*@PageSize+1) And (@PageIndex*@PageSize);
    </Statement>

    <!--获取记录数-->
    <Statement Id="GetRecord">
      Select Count(1) From Category T
      <Include RefId="QueryParams" />
    </Statement>

    <!--获取表映射实体-->
    <Statement Id="GetEntity">
      Select Top 1 T.* From Category T With(NoLock)
      <Where>
        <IsNotEmpty Prepend="And" Property="Id">
          T.Id=@Id
        </IsNotEmpty>
      </Where>
    </Statement>

    <!--是否存在该记录-->
    <Statement Id="IsExist">
      Select Count(1) From Category T
      <Include RefId="QueryParams" />
    </Statement>
  </Statements>
</SmartSqlMap>