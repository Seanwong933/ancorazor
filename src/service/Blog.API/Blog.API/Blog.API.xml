<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.API</name>
    </assembly>
    <members>
        <member name="M:Blog.API.Authentication.JWTHelper.IssueJWT(Blog.Model.Authentication.JWTTokenModel)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.API.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="M:Blog.API.Controllers.BlogsController.Get(Blog.Model.ViewModel.ParameterModel.QueryParameters)">
            <summary>
            获取博客列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.API.Controllers.BlogsController.Get(System.Int32)">
            <summary>
            获取详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.API.Controllers.LoginController.GetToken(System.String,System.String)">
            <summary>
            获取JWT的重写方法，推荐这种，注意在文件夹OverWrite下
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            DI 服务注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Blog.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            将服务解析出来用于请求管道中
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
